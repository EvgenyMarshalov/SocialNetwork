{"version":3,"sources":["redux/dialogs-reducer.js","assets/images/user.png","api/api.js","components/Users/Users.module.css","components/Navbar/Navbar.module.css","reportWebVitals.js","redux/auth-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","index.js","components/Common/FormControls/FormsControls.js","components/Common/FormControls/FormsControls.module.css","utils/validators/validators.js","assets/images/loading.svg","components/Common/Preloader/Preloader.js","components/Common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["SEND_MESSAGE","initialState","messages","id","message","dialogs","name","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","instance","axios","create","withCredentials","baseURL","headers","usersAPI","requestUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","module","exports","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","isAuth","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","dispatch","a","resultCode","url","authReducer","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","map","u","followed","count","filter","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebarPage","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","Music","props","News","Settings","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","e","User","user","src","photos","small","userPhoto","disabled","some","Users","getUsersSuperSelector","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","setCurrentPage","this","Preloader","React","Component","compose","connect","bind","items","totalCount","Header","header","alt","loginBlock","HeaderContainer","LoginReduxForm","reduxForm","onSubmit","handleSubmit","Field","placeholder","component","Input","validate","required","error","formSummaryError","length","stopSubmit","_error","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","Suspense","fallback","AppContainer","SamuriJSApp","StrictMode","ReactDOM","document","getElementById","FormControl","input","meta","child","hasError","touched","formControl","children","createField","validators","text","Textarea","restProps","value","maxLengthCreator","maxLength","preloader","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","Promise","reject","newPost","postId"],"mappings":"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","file":"static/js/main.28673312.chunk.js","sourcesContent":["// const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        { id: 1, message: 'Hi!' },\r\n        { id: 2, message: 'How are you?' },\r\n        { id: 3, message: 'Yo' },\r\n        { id: 4, message: 'Yo' },\r\n        { id: 5, message: 'Yo' },\r\n    ],\r\n\r\n    dialogs: [\r\n        { id: 1, name: 'Dimych' },\r\n        { id: 2, name: 'Женя' },\r\n        { id: 3, name: 'Настя' },\r\n        { id: 4, name: 'Вика' },\r\n        { id: 5, name: 'Артур' },\r\n    ],\r\n\r\n    // newMessageBody: ''\r\n};\r\n\r\nconst dialogsReducer= (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // case UPDATE_NEW_MESSAGE_BODY: \r\n        //     return {\r\n        //         ...state,\r\n        //         newMessageBody: action.body\r\n        //     };\r\n        case SEND_MESSAGE: \r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                // newMessageBody: '',\r\n                messages: [...state.messages, { id: 6, message: body }]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n// export const updateNewMessageBodyCreator = (body) => {\r\n//     return {\r\n//         type: UPDATE_NEW_MESSAGE_BODY,\r\n//         body: body\r\n//     }\r\n// }\r\n\r\nexport default dialogsReducer;","export default __webpack_public_path__ + \"static/media/user.a6143582.png\";","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '4671fea4-05ed-4a2e-8c4b-b53db88d9def'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    requestUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    \r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status});\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return instance.put(`profile/photo/`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile/`, profile);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__Jz5GM\",\"selectedPage\":\"Users_selectedPage__SUnjA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav___xomr\",\"item\":\"Navbar_item__2vQqa\",\"activeLink\":\"Navbar_activeLink__1_1Ix\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI, securityAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null, \r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null // if null then captcha is not required\r\n\r\n};\r\n\r\nconst authReducer= (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            case GET_CAPTCHA_URL_SUCCESS: {\r\n            return {\r\n                ...state, \r\n                ...action.payload,\r\n            }\r\n        }\r\n   \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) =>\r\n    ({ type: SET_USER_DATA, payload: {userId, email, login, isAuth}})\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) =>\r\n    ({ type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let { id, login, email } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', { _error: message }));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer;","let initialState = {}\r\n\r\nconst sidebarReducer= (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import { usersAPI } from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n  \r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                // Эти две записи идентичны\r\n                // users: [...state.users],\r\n                // users: state.users.map(u => u)\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        \r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        \r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        \r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        \r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {...state, \r\n                followingInProgress: action.isFetching \r\n                ? [...state.followingInProgress, action.userId] \r\n                : state.followingInProgress.filter(id => id != action.userId)}\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Action creators\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\n// Thunks\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let data = await usersAPI.requestUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(userId), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(userId), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer= (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state, \r\n                initialized: true\r\n            }\r\n        }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS })\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then( () => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\n\r\nexport default appReducer;","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebarPage: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}><NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink></div>\r\n            <div className={`${s.item} ${s.active}`}><NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink></div>\r\n            <div className={s.item}><NavLink to='/news' activeClassName={s.activeLink}>News</NavLink></div>\r\n            <div className={s.item}><NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink></div>\r\n            <div className={s.item}><NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink></div>\r\n            <div className={s.item}><NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink></div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import s from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import s from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import s from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React, { useState } from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport cn from 'classnames';\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    \r\n    let pages = [];\r\n    for (let i=1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n            <div className={styles.paginator}>\r\n                { portionNumber > 1 &&\r\n                <button onClick={() => {setPortionNumber(portionNumber - 1)}}> PREV </button> }\r\n\r\n                {pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map( p => {\r\n                    return <span className={ cn({\r\n                        [styles.selectedPage]: currentPage === p\r\n                    }, styles.pageNumber) }\r\n                            key = {p}\r\n                            onClick={(e) => {\r\n                                onPageChanged(p);\r\n                            }}>{p}</span>\r\n                })}\r\n                { portionCount > portionNumber &&\r\n                     <button onClick={() => {setPortionNumber(portionNumber + 1)}}> NEXT </button> }\r\n\r\n            </div>\r\n    )       \r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as axios from 'axios';\r\nimport { usersAPI } from '../../api/api';\r\nimport Paginator from '../Common/Paginator/Paginator';\r\n\r\n\r\nconst User = ({ user, followingInProgress, follow, unfollow }) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                            onClick={() => { unfollow(user.id); }}>\r\n                            Unfollow</button>\r\n                        : <button disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                            onClick={() => { follow(user.id); }}>\r\n                            Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{'u.location.country'}</div>\r\n                    <div>{'u.location.city'}</div>\r\n                </span>\r\n            </span>\r\n        </div>)\r\n}\r\n\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../Common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\n\r\nconst Users = ({ currentPage, totalUsersCount, pageSize, onPageChanged, ...props }) => {\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                totalItemsCount={totalUsersCount} pageSize={pageSize} />\r\n            <div>\r\n                {\r\n                    props.users.map(u => <User user={u} key={u.id} followingInProgress={props.followingInProgress}\r\n                        follow={props.follow} unfollow={props.unfollow} />\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsersSuperSelector = createSelector( getUsers, (users) => {\r\n    return users.filter(u => true);\r\n} )\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import { connect } from 'react-redux';\r\nimport { follow, requestUsers, setCurrentPage, toggleFollowingProgress, unfollow } from '../../redux/users-reducer';\r\nimport React from 'react';\r\nimport Users from './Users';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress, getUsersSuperSelector } from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize);\r\n        this.props.setCurrentPage(pageNumber);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader /> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    // toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    //    users: getUsers(state),\r\n       users: getUsersSuperSelector(state),\r\n       pageSize: getPageSize(state),\r\n       totalUsersCount: getTotalUsersCount(state),\r\n       currentPage: getCurrentPage(state),\r\n       isFetching: getIsFetching(state),\r\n       followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//        users: state.usersPage.users,\r\n//        pageSize: state.usersPage.pageSize,\r\n//        totalUsersCount: state.usersPage.totalUsersCount,\r\n//        currentPage: state.usersPage.currentPage,\r\n//        isFetching: state.usersPage.isFetching,\r\n//        followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\n// let withRedirect = withAuthRedirect(UsersContainer);\r\n// export default connect(mapStateToProps,\r\n//     {follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers})(UsersContainer);\r\n// export default (withRedirect);\r\n\r\nexport default compose(\r\n    // withAuthRedirect,  // Не показывать страницу Users неавторизованным пользователям\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers})\r\n) (UsersContainer)","import { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://www.tailorbrands.com/wp-content/uploads/2020/07/mcdonalds-logo.jpg' alt='' />\r\n\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth \r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div> \r\n                    :<NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    \r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout}) (HeaderContainer);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { Input } from '../Common/FormControls/FormsControls';\r\nimport styles from './../Common/FormControls/FormsControls.module.css'\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                {/* <input placeholder={'Login'} /> */}\r\n                <Field placeholder={'Email'} name={'email'} component={Input}\r\n                    validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} name={'password'} component={Input}\r\n                    validate={[required]} type={'password'} />\r\n            </div>\r\n            <div>\r\n                <Field type={'checkbox'} name={'rememberMe'} component={Input} /> remember me\r\n            </div>\r\n            \r\n            <div>\r\n                { props.captchaUrl && <img src={props.captchaUrl} alt=\"\" /> }\r\n            </div>\r\n            \r\n            <div>\r\n                { props.captchaUrl && <Field placeholder={'Symbols from image'} validate={[required]} name={'captcha'} component={Input} /> }\r\n            </div>\r\n\r\n            { props.error && <div className={styles.formSummaryError}>\r\n                {props.error}\r\n            </div> }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n}) (LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n// export default Login;\r\nexport default connect(mapStateToProps, {login}) (Login);","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Music from './components/Music/Music';\nimport News from './components/News/News';\nimport Settings from './components/Settings/Settings';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginPage from './components/Login/Login';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { initializeApp } from './redux/app-reducer';\nimport Preloader from './components/Common/Preloader/Preloader';\nimport store from './redux/redux-store';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\n\n// import DialogsContainer from './components/Dialogs/DialogsContainer';\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n// import ProfileContainer from './components/Profile/ProfileContainer';\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    return (\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <div className='app-wrapper-content'>\n\n              <Route path='/profile/:userId?' render={() => {\n                return <React.Suspense fallback={<div>Loading...</div>}>\n                  <ProfileContainer />\n                </React.Suspense>\n              }} />\n\n              <Route path='/dialogs' render={() => {\n                return <React.Suspense fallback={<div>Loading...</div>}>\n                  <DialogsContainer />\n                </React.Suspense>\n              }} />\n\n              <Route path='/users' render={() =>\n                <UsersContainer />} />\n\n              <Route path='/login' render={() =>\n                <LoginPage />} />\n\n              {/* <Route exact path='/' render={() =>\n                <LoginPage />} /> */}\n\n\n\n              <Route path='/music' component={Music} />\n              <Route path='/news' component={News} />\n              <Route path='/settings' component={Settings} />\n\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = connect(mapStateToProps, { initializeApp })(App);\n\nconst SamuriJSApp = (props) => {\n  return <HashRouter >\n    <Provider store={store}>\n      <React.StrictMode>\n        <AppContainer />\n      </React.StrictMode>\n    </Provider>\n  </HashRouter>\n}\n\nexport default SamuriJSApp;\n","import reportWebVitals from './reportWebVitals';\nimport store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport SamuriJSApp from './App';\n\n\nReactDOM.render(\n  <SamuriJSApp />,\n  document.getElementById('root')\n);\n\nReactDOM.render(\n  \n      <React.StrictMode>\n        {/* <App state={state} dispatch={store.dispatch.bind(store)} store={store} /> */}\n        <App />\n      </React.StrictMode>\n    ,\n  document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Field } from 'redux-form';\r\nimport styles from './FormsControls.module.css'\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            { hasError && <span>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props={}, text='') => {\r\n    return (\r\n        <div>\r\n            <Field placeholder = {placeholder}\r\n                name = {name}\r\n                validate = {validators}\r\n                component = {component}\r\n                {...props}\r\n                /> {text}\r\n        </div>\r\n    )\r\n}\r\n\r\n// export const Textarea = ({input, meta, ...props}) => { //Деструктуризация и REST-оператор\r\n//     const hasError = meta.touched && meta.error;\r\n//     return (\r\n//         <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n//             <div>\r\n//             <textarea {...input} {...props} />\r\n//             </div>\r\n//             { hasError && <span>{meta.error}</span> }\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport const Textarea = (props) => { \r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => { \r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\n// export const Input = ({input, meta, ...props}) => { //Деструктуризация и REST-оператор\r\n//     const hasError = meta.touched && meta.error;\r\n//     return (\r\n//         <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n//             <div>\r\n//             <input {...input} {...props} />\r\n//             </div>\r\n//             { hasError && <span>{meta.error}</span> }\r\n//         </div>\r\n//     )\r\n// }","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__O8r0Z\",\"error\":\"FormsControls_error__2ObGf\",\"formSummaryError\":\"FormsControls_formSummaryError__1OVVL\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n// export const maxLength30 = value => {\r\n//     // if (value && value.length > 30) return 'Max length is 30 symbols';\r\n//     if (value.length > 30) return 'Max length is 30 symbols';\r\n//     return undefined;\r\n// }","export default __webpack_public_path__ + \"static/media/loading.7f681fed.svg\";","import preloader from '../../../assets/images/loading.svg';\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        // <div style={{backgroundColor:'white'}}>\r\n        <div >\r\n            <img src={preloader} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3xOES\",\"pageNumber\":\"Paginator_pageNumber__1NVup\",\"selectedPage\":\"Paginator_selectedPage__9Rs7X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__30c2y\",\"loginBlock\":\"Header_loginBlock___S5G1\"};","import { stopSubmit } from \"redux-form\";\r\nimport { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\n// const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hi, how are you?', likesCount: 5 },\r\n        { id: 2, message: \"It's my first post\", likesCount: 10 },\r\n        { id: 3, message: 'Yo', likesCount: 5 },\r\n        { id: 4, message: 'Yo', likesCount: 5 },\r\n        { id: 5, message: 'Yo', likesCount: 5 },\r\n    ],\r\n\r\n    // newPostText: 'it-kamasutra.com',\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer= (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {...state, profile: {...state.profile, photos: action.photos }}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    // Thunk\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    // Thunk\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    // Thunk\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    // Thunk\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    // Thunk\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}));\r\n        // dispatch(stopSubmit('edit-profile', {'contacts': {'facebook': response.data.messages[0]}}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;"],"sourceRoot":""}