{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","message","likesCount","MyPosts","React","memo","postsElements","posts","map","p","postsBlock","onSubmit","values","addPost","newPostText","maxLengt10","maxLengthCreator","AddNewPostForm","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","reduxForm","form","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","descriptionBlock","photos","large","alt","fullName","aboutMe","lookingForAJobDescription","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.56b7a22d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"topPicture\":\"ProfileInfo_topPicture__1siuB\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2jRH7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3oIfU\",\"posts\":\"MyPosts_posts__3YoPA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__SnwO0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topPicture\":\"Profile_topPicture__SJbSF\"};","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://5mod.ru/uploads/posts/2020-12/1607051489_1607051535.png' />\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React, { PureComponent } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../Common/FormControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\n\r\nconst MyPosts = React.memo( (props) => {\r\n    let postsElements = props.posts.map( p => <Post message={p.message} likesCount={p.likesCount} /> );\r\n    let newPostElement = React.createRef();\r\n    let onAddPost = (values) => {props.addPost(values.newPostText);}\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostForm onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n// class MyPosts extends PureComponent {\r\n//     // shouldComponentUpdate(nextProps, nextState) {\r\n//     //     return nextProps != this.props || nextState != this.state;\r\n//     // }\r\n//     render() {\r\n//     let postsElements = this.props.posts.map( p => <Post message={p.message} likesCount={p.likesCount} /> );\r\n//     let newPostElement = React.createRef();\r\n//     let onAddPost = (values) => {this.props.addPost(values.newPostText);}\r\n\r\n//     return (\r\n//         <div className={s.postsBlock}>\r\n//             <h3>My posts</h3>\r\n//             <AddNewPostForm onSubmit={onAddPost} />\r\n//             <div className={s.posts}>\r\n//                 {postsElements}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n//     }\r\n// }\r\n\r\nconst maxLengt10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='newPostText' component={Textarea} placeholder={'Post message'}\r\n                validate={[required, maxLengt10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'}) (AddNewPostForm);\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // updateNewPostText: (text) => {\r\n        //     let action = updateNewPostTextActionCreator(text);\r\n        //     dispatch(action);\r\n        // },\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState ({\r\n        status: e.currentTarget.value\r\n    });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={ this.activateEditMode }>{this.props.status || '-----'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deactivateEditMode } value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    // let stateWithSetState = useState(false);\r\n    // let editMode = stateWithSetState[0];\r\n    // let setEditMode = stateWithSetState[1];\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    \r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    \r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ activateEditMode }>{props.status || '-----'} </span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import Preloader from '../../Common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            {/* <div className={s.topPicture}>\r\n                <img src='http://cdn.cnn.com/cnnnext/dam/assets/181010131059-australia-best-beaches-cossies-beach-cocos3.jpg' />\r\n            </div> */}\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large} alt=\"\" />\r\n                <div>Name: {props.profile.fullName}</div>\r\n                <div>About: {props.profile.aboutMe}</div>\r\n                <div>Job: {props.profile.lookingForAJobDescription}</div>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import MyPosts from './MyPosts/MyPosts';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n            {/* <MyPostsContainer store={props.store}/> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getStatus, getUserProfile, updateStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Profile {...this.props} \r\n                profile={this.props.profile} \r\n                status={this.props.status} \r\n                updateStatus={this.props.updateStatus}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n) (ProfileContainer);\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n// let WithUrlDataContaierComponent = withRouter(AuthRedirectComponent);\r\n// export default connect(mapStateToProps, {getUserProfile}) (WithUrlDataContaierComponent);"],"sourceRoot":""}